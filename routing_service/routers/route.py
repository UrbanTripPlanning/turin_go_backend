from fastapi import APIRouter, Depends
from routing_service.models.api_route import SearchRouteRequest


router = APIRouter()


demo_path = [(7.704612188512701, 45.0695966542748), (7.70413, 45.06979), (7.70359, 45.06996), (7.70315, 45.0701), (7.7019, 45.07052), (7.70075, 45.06963), (7.69985, 45.06893), (7.69878, 45.0681), (7.69747, 45.06708), (7.69728, 45.06694), (7.69716, 45.06685), (7.69706, 45.06677), (7.69693, 45.06667), (7.69687, 45.06662), (7.69668, 45.06647), (7.69599, 45.06593), (7.69555, 45.06559), (7.69534, 45.06543), (7.695, 45.06516), (7.69451, 45.0648), (7.69389, 45.06429), (7.69258, 45.06328), (7.6917, 45.0636), (7.69088, 45.06391), (7.69081, 45.06374), (7.68988, 45.06371), (7.6889, 45.06368), (7.68858, 45.06323), (7.68834, 45.06332), (7.68736, 45.06369), (7.68715, 45.06377), (7.68692, 45.06345), (7.68576, 45.06383), (7.68443, 45.06394), (7.68425, 45.0637), (7.68348, 45.06398), (7.68324, 45.06399), (7.68307, 45.064), (7.68166, 45.06432), (7.68162, 45.06434), (7.68157, 45.06436), (7.68103, 45.06455), (7.68043, 45.06476), (7.68001, 45.06419), (7.67934, 45.06404), (7.67931, 45.06397), (7.67926, 45.06391), (7.67866, 45.06317), (7.67856, 45.06306), (7.67783, 45.06331), (7.6773, 45.06349), (7.67654, 45.06375), (7.67645, 45.06363), (7.67579, 45.06387), (7.67508, 45.06412), (7.67421, 45.06443), (7.67401, 45.0645), (7.67377, 45.06459), (7.67245, 45.06506), (7.67199, 45.06522), (7.67164, 45.06534), (7.67111, 45.0654), (7.67103, 45.06536), (7.67059, 45.06515), (7.67038, 45.06512), (7.67016, 45.06489), (7.66977, 45.06434), (7.66972, 45.06425), (7.66925, 45.06358), (7.6691, 45.06336), (7.66768, 45.06386), (7.66625, 45.06438), (7.66481, 45.06489), (7.66459, 45.06497), (7.66432, 45.06507), (7.66341, 45.06537), (7.66251, 45.06569), (7.66184, 45.06582), (7.66159, 45.06579), (7.66136, 45.06576), (7.66116, 45.06581), (7.66107, 45.06584), (7.66099, 45.06595), (7.66082, 45.06567), (7.6598, 45.06421), (7.65968, 45.06406)]


@router.get("/search")
async def search(req: SearchRouteRequest = Depends()):
    # TODO: route generate logic
    # []{
    #   routes:[point1, point2, point3, ...],
    #   minutes: 20,
    #   distances: 1.4 (km),
    #   details: [...],
    #   _type: 0 (walk/car/...)
    # }, {...}
    return demo_path
